# ---------------------------------------------------------------------------
# Namespaces and Prefixes

# A bioportal namespace prefix for term mapping URIs.
ns.mapping=http://purl.bioontology.org/mapping/

# A bioportal namespace prefix for ontology term URIs.
ns.purl=http://purl.bioontology.org/ontology/

# A bioportal namespace prefix for ontology acronyms.
ns.ontologies=http://bioportal.bioontology.org/ontologies/

# RDF prefixes for mapping, in turtle syntax.  Used in Mapping.java
ttl.mapRDFS_NS=mapRDFS:
ttl.mapRDFS_URI=<http://protege.stanford.edu/ontologies/mappings/mappings.rdfs#>
ttl.xsd_NS=xsd:
ttl.xsd_URI=<http://www.w3.org/2001/XMLSchema#>
ttl.prefix.mapping=\
@prefix mapRDFS: <http://protege.stanford.edu/ontologies/mappings/mappings.rdfs#> .\n\
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n

# ---------------------------------------------------------------------------
# UMLS

umls.db.url=jdbc:mysql://localhost:3306/umls2011ab
umls.db.user=YOUR_USER_ID
umls.db.passwd=YOUR_USER_PASSWD

umls.MRMAP.REL.RB=http://www.w3.org/2004/02/skos/core#broadMatch
umls.MRMAP.REL.RN=http://www.w3.org/2004/02/skos/core#narrowMatch
umls.MRMAP.REL.RO=http://www.w3.org/2004/02/skos/core#relatedMatch
umls.MRMAP.REL.RQ=http://www.w3.org/2004/02/skos/core#closeMatch
umls.MRMAP.REL.RU=http://www.w3.org/2004/02/skos/core#relatedMatch
umls.MRMAP.REL.SY=http://www.w3.org/2004/02/skos/core#closeMatch
#umls.MRMAP.REL.XR=""

# UMLS Ontology acronyms (SAB) and corresponding bioportal acronyms and virtual IDs.
# Split on ',' first, then on ':' to get: UMLS-SAB, Bioportal-SAB, Bioportal-VirtualID.
# This is generated by processing the file at:
# https://raw.github.com/ncbo/umls2rdf/master/umls.conf
# The processing is done by scripts/umlsAcronyms.sh (which calls umlsAcronyms.pl)
umls.BP.SAB=AIR,AIR,1430;CST,CST,1341;CSP,CSP,1526;HCPCS,HCPCS,1529;ICD10PCS,ICD10PCS,1425;ICD10CM,ICD10CM,1553;ICPC2P,ICPC2P,1429;ICD9CM,ICD9CM,1101;LNC,LNC,1350;MDR,MDR,1422;MDDB,MDDB,1426;MSH,MSH,1351;MEDLINEPLUS,MEDLINEPLUS,1347;MTHCH,MTHCH,1510;NDDF,NDDF,1424;NDFRT,NDFRT,1352;OMIM,OMIM,1348;PDQ,PDQ,1349;RCD,RCD,1427;RXNORM,RXNORM,1423;SNOMEDCT,SNOMEDCT,1353;VANDF,VANDF,1527;WHO,WHO,1354;HL7V3.0,HL7,1343;ICD10,ICD10,1516;CPT,CPT,1504;ICPC,ICPC,1344


# ---------------------------------------------------------------------------
# BioPortal User

bioportal.user.name=YOUR_NAME
bioportal.user.id=YOUR_ID
bioportal.user.apiKey=YOUR_API_KEY


# ---------------------------------------------------------------------------
# SPARQL
#
# These properties for SPARQL are much easier to compose as properties than 
# java code, because java does not provide for easy construction of 
# multi-line strings.
#

# Test SPARQL connection using TCPMON
#sparql.service=http://localhost:4040/sparql/

# The primary bioportal SPARQL server; requires bioportal API key.
sparql.service=http://sparql.bioontology.org/sparql/
sparql.apiKey=YOUR_API_KEY

sparql.printQueries=false

sparql.prefix.bioportal=\
PREFIX bp: <http://bioportal.bioontology.org/> \n\
PREFIX bpMeta: <http://bioportal.bioontology.org/metadata/def/> \n\
PREFIX bpData: <http://bioportal.bioontology.org/ontologies/> \n\
PREFIX bpGraphs: <http://purl.bioontology.org/def/graphs/> \n\
PREFIX omv: <http://omv.ontoware.org/2005/05/ontology#> \n

sparql.prefix.standard=\
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n\
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n\
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> \n\
PREFIX owl: <http://www.w3.org/2002/07/owl#> \n\
PREFIX omv: <http://omv.ontoware.org/2005/05/ontology#> \n\
PREFIX skos: <http://www.w3.org/2004/02/skos/core#> \n\
PREFIX dc: <http://purl.org/dc/elements/1.1/> \n\
PREFIX dct: <http://purl.org/dc/terms/> \n\
PREFIX foaf: <http://xmlns.com/foaf/0.1/> \n\
PREFIX bio: <http://purl.org/vocab/bio/0.1/> \n

# This replaces 'FILTER_REGEX' below to limit the ontologies returned.
sparql.ontologyFilter=\
  FILTER( \n\
    CONTAINS(UCASE(str(?verGraph)),"SNOMED") || \n\
    CONTAINS(UCASE(str(?verGraph)),"MSH") \n\
  ) \n

# The 'FILTER_REGEX' is used in testing to limit the ontologies returned.
sparql.ontologies=\
PREFIX meta: <http://bioportal.bioontology.org/metadata/def/> \n\
SELECT ?vrtURL ?vrtID ?verURL ?verID ?verGraph  \n\
WHERE { \n\
  ?vrtURL a meta:VirtualOntology . \n\
  ?vrtURL meta:id ?vrtID . \n\
  ?vrtURL meta:hasVersion ?verURL . \n\
  ?verURL meta:id ?verID . \n\
  ?verURL meta:hasDataGraph ?verGraph . \n\
  FILTER_REGEX\n\
} \n

# Get a list of all the virtual ontologies.
sparql.ontologyVirtuals=\
PREFIX meta: <http://bioportal.bioontology.org/metadata/def/> \n\
SELECT DISTINCT ?vrtURL ?vrtID \n\
WHERE { \n\
  ?vrtURL a meta:VirtualOntology . \n\
  ?vrtURL meta:id ?vrtID .\n\
} \n

# The 'REGEX' is used to substitute the ontology URI.
sparql.ontologyID=\
PREFIX meta: <http://bioportal.bioontology.org/metadata/def/> \n\
SELECT DISTINCT ?ontID \n\
WHERE { \n\
  <REGEX> meta:id ?ontID .\n\
} \n

# Get an ontology version from <REGEX>, which is an ontology graph URL.
sparql.ontologyGraph2Version=\
PREFIX meta: <http://bioportal.bioontology.org/metadata/def/> \n\
SELECT DISTINCT ?verURL \n\
WHERE { \n\
  ?verURL meta:hasDataGraph <REGEX> . \n\
} \n

# Get an ontology version graph from <REGEX>, which is an ontology version URL.
sparql.ontologyVersion2Graph=\
PREFIX meta: <http://bioportal.bioontology.org/metadata/def/> \n\
SELECT DISTINCT ?verGraph \n\
WHERE { \n\
  <REGEX> meta:hasDataGraph ?verGraph . \n\
} \n

# The 'REGEX' is used to substitute the ontology version URI.
sparql.ontologyVersion2Virtual=\
PREFIX meta: <http://bioportal.bioontology.org/metadata/def/> \n\
SELECT ?vrtURL \n\
WHERE { \n\
  <REGEX> meta:isVersionOfVirtualOntology ?vrtURL . \n\
} \n

# The 'VRT_REGEX' is used to substitute the ontology virtual URI.
sparql.ontologyVirtual2Version=\
PREFIX meta: <http://bioportal.bioontology.org/metadata/def/> \n\
SELECT ?verURL \n\
WHERE { \n\
  <REGEX> meta:hasVersion ?verURL . \n\
} \n

# The 'ONTOLOGY_REGEX' is used to limit the query to an ontology.
sparql.loomTerms=\
PREFIX skos: <http://www.w3.org/2004/02/skos/core#> \n\
SELECT ?termURL ?prefLabel ?altLabel \n\
FROM <ONTOLOGY_REGEX> \n\
FROM <http://bioportal.bioontology.org/ontologies/globals> \n\
WHERE { \n\
  ?termURL a <http://www.w3.org/2002/07/owl#Class> . \n\
  ?termURL skos:prefLabel ?prefLabel . \n\
  OPTIONAL { ?termURL skos:altLabel ?altLabel .} \n\
} \n

# The 'ONTOLOGY_REGEX' is used to limit the query to an ontology.
sparql.cuiTerms=\
SELECT ?termURL ?termCUI \n\
FROM <ONTOLOGY_REGEX> \n\
WHERE { \n\
  ?termURL a <http://www.w3.org/2002/07/owl#Class> . \n\
  ?termURL <http://bioportal.bioontology.org/ontologies/umls/cui> ?termCUI . \n\
} \n

# The 'ONTOLOGY_REGEX' is used to limit the query to an ontology.
sparql.uriTerms=\
SELECT ?termURL \n\
FROM <ONTOLOGY_REGEX> \n\
WHERE { \n\
  ?termURL a <http://www.w3.org/2002/07/owl#Class> . \n\
} \n

# The 'ONTOLOGY_REGEX' is used to limit the query to an ontology.
# <http://purl.obolibrary.org/obo/xref>
# <http://www.geneontology.org/formats/oboInOWL#xref>
sparql.xrefTerms=\
SELECT DISTINCT ?termURL ?termXref \n\
FROM <ONTOLOGY_REGEX> \n\
WHERE { \n\
  ?termURL a <http://www.w3.org/2002/07/owl#Class> . \n\
  ?termURL <http://www.geneontology.org/formats/oboInOWL#xref> ?termXref . \n\
} \n

# The 'XREF_REGEX' is used to substitute the term xref URI.
sparql.xrefOntologies=\
SELECT DISTINCT ?verGraph \n\
WHERE { \n\
  GRAPH ?verGraph { <XREF_REGEX> a <http://www.w3.org/2002/07/owl#Class> . } \n\
} \n


